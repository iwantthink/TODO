/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
//所有的任务只会被 执行一次 。 无论你是执行了多少个
// 打个比方  gradle test test  和 gradle test 是得到一样的结果
task compile{
	doLast{
		println 'compile'
	}
}

task compileTest(dependsOn:compile){
	doLast{
		println 'compile test'
	}
}

task test (dependsOn:[compile,compileTest]){
	doLast{
		println 'test'
	}
}

task dist(dependsOn:[compile,test]){
	description = 'i am dist'
	group = 'dist'

	doLast{
		pirntln 'dist'
	}
}

//可以通过-x 来排除指定的 任务
//gradle compileTest -x compile



//gradle test --continue  ，gradle会执行所有的任务，即使遇到了失败的任务



//在调用 task的时候 ，如果task的 缩写 不会和其他的task冲突 ，那么可以直接使用这个 缩写来调用
//gradle d   ==  gradle dist



//调用task的时候，如果task 使用驼峰式命名(必须是，另外注意大小写) ，则可以 使用驼峰式的缩写
//gradle cT == gradle compileTest



//通过 -b 的指令 来指定 使用哪个构建文件
//通过 -p 的指令 来指定 使用哪个项目
//gradle -p -b subBuild/build.gradle sayHi



//--rerun-tasks
//强制gradle运行所有任务



//gradle projects 
//获取 项目列表



//gradle tasks 
// 获取 任务列表
//--all 用来获取所有任务 ，包括未分类的



// description = ''    group = ''
//用来设置 说明  和 分组 ,应该是在闭包中设置的